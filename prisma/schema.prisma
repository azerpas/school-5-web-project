generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Keyword {
  id           Int            @id @default(autoincrement())
  name         String?
  User_Keyword User_Keyword[]
}

model Offer {
  id       Int       @id @default(autoincrement())
  price    Float?
  unit     t_unite?
  custom   Boolean?
  id_user  Int
  User     User      @relation(fields: [id_user], references: [id])
  Proposal Proposal?
}

model Platform {
  id            Int             @id @default(autoincrement())
  name          String?
  Platform_User Platform_User[]
}

model Platform_User {
  id_user     Int
  id_platform Int
  Platform    Platform @relation(fields: [id_platform], references: [id])
  User        User     @relation(fields: [id_user], references: [id])

  @@id([id_user, id_platform])
}

model Proposal {
  id                                Int       @id @default(autoincrement())
  release_date                      DateTime?
  statut                            t_status?
  id_influencer                     Int
  id_offer                          Int       @unique
  id_brand                          Int
  User_Proposal_id_brandToUser      User      @relation("Proposal_id_brandToUser", fields: [id_brand], references: [id])
  User_Proposal_id_influencerToUser User      @relation("Proposal_id_influencerToUser", fields: [id_influencer], references: [id])
  Offer                             Offer     @relation(fields: [id_offer], references: [id])
}

model User {
  id                                    Int             @id @default(autoincrement())
  name                                  String?
  firstname                             String?
  password                              String?
  email                                 String?         @unique
  bio                                   String?
  roles                                 t_role?
  Offer                                 Offer[]
  Platform_User                         Platform_User[]
  Proposal_Proposal_id_brandToUser      Proposal[]      @relation("Proposal_id_brandToUser")
  Proposal_Proposal_id_influencerToUser Proposal[]      @relation("Proposal_id_influencerToUser")
  User_Keyword                          User_Keyword[]
  Work                                  Work[]
}

model User_Keyword {
  id_user    Int
  id_keyword Int
  Keyword    Keyword @relation(fields: [id_keyword], references: [id])
  User       User    @relation(fields: [id_user], references: [id])

  @@id([id_user, id_keyword])
}

model Work {
  id        Int     @id @default(autoincrement())
  url       String?
  name      String?
  id_user   Int
  thumbnail String?
  User      User    @relation(fields: [id_user], references: [id])
}

enum t_role {
  ROLE_ADMIN
  ROLE_USER
  ROLE_INFLUENCER
  ROLE_BRAND
}

enum t_status {
  proposed
  done
  canceled
  refused
  accepted
}

enum t_unite {
  video
  minute
  hour
  photo
  month
  publication
}
